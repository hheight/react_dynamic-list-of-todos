{"version":3,"sources":["helpers/api.ts","components/TodoList.tsx","components/LoadButton.tsx","helpers/sorts.ts","App.tsx","index.tsx"],"names":["API_URL","getTodos","a","fetch","response","json","getUsers","getPreparedTodos","Promise","all","todos","users","map","todo","user","find","currentUser","userId","id","TodoList","className","title","completed","key","name","classNames","LoadButton","loadTodos","useState","setTitle","isLoading","setIsLoading","type","disabled","onClick","setTimeout","SORT_BUTTONS","App","setTodos","isLoaded","setIsLoaded","isReversed","setIsReversed","preparedTodos","reverse","sortName","sort","b","localeCompare","Number","sortTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f7a146f.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = async (): Promise<TodoFromServer[]> => {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n};\n\nexport const getUsers = async (): Promise<User[]> => {\n  const response = await fetch(`${API_URL}/users`);\n\n  return response.json();\n};\n\nexport const getPreparedTodos = async (): Promise<Todo[]> => {\n  const [todos, users] = await Promise.all([getTodos(), getUsers()]);\n\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(currentUser => todo.userId === currentUser.id) as User,\n  }));\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"collection\">\n      {todos.map(({\n        id, title, completed, user,\n      }) => (\n        <li\n          className=\"collection-item\"\n          key={id}\n        >\n          <span className=\"name\">{user.name}</span>\n          <p>{title}</p>\n          <i className={classNames(\n            'material-icons',\n            'medium',\n            { 'cyan-text': completed, 'pink-text darken-4': !completed },\n          )}\n          >\n            {completed ? 'sentiment_very_satisfied' : 'sentiment_dissatisfied'}\n          </i>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  loadTodos: () => void;\n};\n\nexport const LoadButton: React.FC<Props> = ({ loadTodos }) => {\n  const [title, setTitle] = useState<string>('Load');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const loading = () => {\n    setTitle('Loading...');\n    setIsLoading(true);\n\n    setTimeout(() => {\n      loadTodos();\n    }, 1000);\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className=\"waves-effect waves-light btn-large\"\n      disabled={isLoading}\n      onClick={loading}\n    >\n      {title}\n    </button>\n  );\n};\n","export const SORT_BUTTONS: Sorts[] = [\n  {\n    id: 1,\n    name: 'title',\n    title: 'Title',\n  },\n\n  {\n    id: 2,\n    name: 'completed',\n    title: 'Completeness',\n  },\n\n  {\n    id: 3,\n    name: 'name',\n    title: 'Name',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getPreparedTodos } from './helpers/api';\nimport { TodoList } from './components/TodoList';\nimport { LoadButton } from './components/LoadButton';\nimport { SORT_BUTTONS } from './helpers/sorts';\n\nconst App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n\n  async function loadTodos() {\n    const preparedTodos = await getPreparedTodos();\n\n    setTodos(preparedTodos);\n    setIsLoaded(true);\n  }\n\n  if (isReversed) {\n    setTodos([...todos].reverse());\n    setIsReversed(false);\n  }\n\n  const sortTodos = (sortName: string) => {\n    switch (sortName) {\n      case 'title':\n        setTodos([...todos].sort((a, b) => (\n          a.title.localeCompare(b.title)\n        )));\n        break;\n\n      case 'completed':\n        setTodos([...todos].sort((a, b) => (\n          Number(b.completed) - Number(a.completed)\n        )));\n        break;\n\n      case 'name':\n        setTodos([...todos].sort((a, b) => (\n          a.user.name.localeCompare(b.user.name)\n        )));\n        break;\n\n      default:\n        setTodos(todos);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"row center-align\">Dynamic list of TODOs</h1>\n      {!isLoaded ? (\n        <div className=\"row center-align\">\n          <LoadButton loadTodos={loadTodos} />\n        </div>\n      ) : (\n        <>\n          <div className=\"row center-align\">\n            {SORT_BUTTONS.map(({ id, name, title }) => (\n              <button\n                key={id}\n                type=\"button\"\n                className=\"waves-effect waves-light btn-large\"\n                onClick={() => sortTodos(name)}\n              >\n                {title}\n              </button>\n            ))}\n            <button\n              type=\"button\"\n              className=\"btn-floating btn-large cyan darken-4 ml1\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              <i className=\"material-icons\">autorenew</i>\n            </button>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n              <TodoList todos={todos} />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}